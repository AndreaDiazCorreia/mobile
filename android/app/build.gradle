plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Load keystore properties for release signing
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
def hasKeystore = false

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    // Check if all required properties are available
    hasKeystore = keystoreProperties['keyAlias'] != null && 
                  keystoreProperties['keyPassword'] != null && 
                  keystoreProperties['storePassword'] != null && 
                  keystoreProperties['storeFile'] != null &&
                  keystoreProperties['keyAlias'] != '${ANDROID_KEY_ALIAS}' // Not placeholder
}

// Suppress obsolete options warnings emitted by transitive JavaCompile tasks
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-Xlint:-options")
}

android {
    namespace = "network.mostro.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
    }

    signingConfigs {
        if (hasKeystore) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    defaultConfig {
        applicationId = "network.mostro.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk 23 // Required by flutter_secure_storage
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            if (hasKeystore) {
                signingConfig signingConfigs.release
            } else {
                // Fallback to debug signing for development
                signingConfig signingConfigs.debug
                logger.warn("Release build using debug signing - keystore not available")
            }
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
}
